{
	"info": {
		"_postman_id": "428dcf42-1f2c-4e3c-b75a-0f74ceffa0c4",
		"name": "API_Learning_02_JSONPlaceholder",
		"description": "Dasar API + Latihan Dummy API menggunakan JSONPlaceholder",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36385693"
	},
	"item": [
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {\r",
							"  type: \"object\",\r",
							"  properties: {\r",
							"    userId: { type: \"number\" },\r",
							"    id: { type: \"number\" },\r",
							"    title: { type: \"string\" },\r",
							"    body: { type: \"string\" }\r",
							"  },\r",
							"  required: [\"userId\",\"id\",\"title\",\"body\"]\r",
							"};\r",
							"pm.test(\"Schema valid\", ()=> pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true);\r",
							"\r",
							"pm.test(\"Status 200\", ()=> pm.response.to.have.status(200));\r",
							"pm.test(\"JSON response\", ()=> pm.response.to.be.json);\r",
							"pm.test(\"Has title\", ()=> {\r",
							"  const j = pm.response.json();\r",
							"  pm.expect(j).to.have.property(\"title\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/posts/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const j = pm.response.json();\r",
							"pm.test(\"201 Created\", ()=> pm.response.to.have.status(201));\r",
							"pm.test(\"Echo title\", ()=> pm.expect(j.title).to.eql(pm.iterationData.get(\"title\")));\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"{{title}}\",\r\n  \"body\": \"{{body}}\",\r\n  \"userId\": {{userId}}\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/posts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", ()=> pm.response.to.have.status(200));\r",
							"pm.test(\"Has title\", ()=> {\r",
							"  const j = pm.response.json();\r",
							"  pm.expect(j).to.have.property(\"title\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 1,\r\n  \"title\": \"updated title\",\r\n  \"body\": \"updated body\",\r\n  \"userId\": 1\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/posts/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200 or 204\", ()=> pm.expect([200,204]).to.include(pm.response.code));\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/posts/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://jsonplaceholder.typicode.com"
		}
	]
}